{
  "version": 3,
  "sources": ["../../../app/routes/breadcrumbs.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\breadcrumbs.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\breadcrumbs.tsx\");\n  import.meta.hot.lastModified = \"1704989734552.0774\";\n}\n// REMIX HMR END\n\n// Breadcrumbs component\nimport { ChevronRightIcon } from '@heroicons/react/20/solid';\nexport default function Breadcrumbs({\n  paths\n}) {\n  if (typeof window === 'undefined') {\n    return null; // Return null if window is not defined\n  }\n  const currentPath = window.location.pathname; // Get the current path from the browser\n\n  return <nav className=\"flex\" aria-label=\"Breadcrumb\">\r\n      <ol role=\"list\" className=\"flex items-center space-x-4\">\r\n        {paths.map((path, index) => <li key={index}>\r\n            <div className=\"flex items-center\"> {/* Add a wrapper div */}\r\n              <a href={path.url} className={`text-blue-900 hover:text-blue-900 ${currentPath === path.url ? 'font-bold' : ''}`} style={{\n            color: currentPath === path.url ? '#3F72AF' : 'inherit'\n          }}>\r\n                {path.label}\r\n              </a>\r\n              {index < paths.length - 1 &&\n          // Add ChevronRightIcon conditionally for all except the last path\n          <ChevronRightIcon className=\"h-5 w-5 flex-shrink-0 text-gray-400\" aria-hidden=\"true\" />}\r\n            </div>\r\n          </li>)}\r\n      </ol>\r\n    </nav>;\n}\n_c = Breadcrumbs;\nvar _c;\n$RefreshReg$(_c, \"Breadcrumbs\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAkCc;AAjCd,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,uCAAyC,EAAE;AAAA,EACpF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,YAA6B;AAAA,EAClC;AACF,GAAG;AACD,MAAI,OAAO,WAAW,aAAa;AACjC,WAAO;AAAA,EACT;AACA,QAAM,cAAc,OAAO,SAAS;AAEpC,SAAO,mDAAC,SAAI,WAAU,QAAO,cAAW,cACpC,6DAAC,QAAG,MAAK,QAAO,WAAU,+BACvB,gBAAM,IAAI,CAAC,MAAM,UAAU,mDAAC,QACzB,6DAAC,SAAI,WAAU,qBAAoB;AAAA;AAAA,IACjC,mDAAC,OAAE,MAAM,KAAK,KAAK,WAAW,qCAAqC,gBAAgB,KAAK,MAAM,cAAc,MAAM,OAAO;AAAA,MAC3H,OAAO,gBAAgB,KAAK,MAAM,YAAY;AAAA,IAChD,GACO,eAAK,SAHR;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACC,QAAQ,MAAM,SAAS;AAAA,IAE5B,mDAAC,4BAAiB,WAAU,uCAAsC,eAAY,UAA9E;AAAA;AAAA;AAAA;AAAA,WAAqF;AAAA,OARnF;AAAA;AAAA;AAAA;AAAA,SASA,KAViC,OAAT;AAAA;AAAA;AAAA;AAAA,SAW1B,CAAK,KAZT;AAAA;AAAA;AAAA;AAAA,SAaA,KAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

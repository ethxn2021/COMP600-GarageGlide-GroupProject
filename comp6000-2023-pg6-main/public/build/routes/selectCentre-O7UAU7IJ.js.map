{
  "version": 3,
  "sources": ["../../../app/routes/selectCentre.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\routes\\\\selectCentre.tsx\"\n);\nimport.meta.hot.lastModified = \"1706482052638.082\";\n}\n// REMIX HMR END\n\nimport React, { useState, useEffect } from 'react';\r\nimport { Link, useParams } from '@remix-run/react';\r\n\r\nexport default function selectCentre() {\r\n  const [showNearbyCentres, setShowNearbyCentres] = useState(false);\r\n  const [selectedCentre, setSelectedCentre] = useState(null);\r\n  const { postcode: urlPostcode, registration: urlRegistration } = useParams();\r\n  const [postcode, setPostcode] = useState(urlPostcode || '');\r\n  const [registration, setRegistration] = useState(urlRegistration || '');\r\n\r\n  useEffect(() => {\r\n    // This effect will run when the component mounts and when the URL parameters change\r\n    console.log('Postcode:', postcode);\r\n    console.log('Registration:', registration);\r\n  }, [postcode, registration]);\r\n\r\n  const nearbyCentres = [\r\n    { name: 'Canterbury', address: 'University of Kent', city: 'Canterbury', county: 'Kent', country: 'United Kingdom', postcode: 'CT2 7FN', distance: 'Approx 0.5 miles away', tel: 'Tel: 01227 764000' },\r\n    { name: 'Medway', address: 'University of Kent Medway Building', city: 'Chatham', county: 'Kent', country: 'United Kingdom', postcode: 'ME4 4AG', distance: 'Approx 1.5 miles away', tel: 'Tel: 01227 764000' }\r\n    // Add more nearby centres as needed\r\n  ];\r\n\r\n  const handleFindCentre = () => {\r\n    if (postcode.length > 8 || postcode.length < 7 || registration.trim() === '') {\r\n      alert('Invalid postcode or registration');\r\n    } else {\r\n      // Filter the nearbyCentres based on the first two letters of the entered postcode\r\n      const foundCentre = nearbyCentres.find((centre) => centre.postcode.startsWith(postcode.slice(0, 1)));\r\n      // Update the selectedCentre state with the found centre information\r\n      setSelectedCentre(foundCentre);\r\n    }\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    // Navigate to the service page with the values from the text fields\r\n    window.location.href = `/service?postcode=${encodeURIComponent(postcode)}&registration=${encodeURIComponent(registration)}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"py-24 sm:py-32\">\r\n      <div className=\"mx-auto max-w-2xl text-center\">\r\n        <h2 className=\"mt-2 text-4xl font-bold tracking-tight sm:text-6xl\" style={{ color: '#112D4E' }}>\r\n          YOUR DETAILS:\r\n        </h2>\r\n\r\n        <div className=\"mx-2\">\r\n          {/* Use text input for postcode */}\r\n          <input\r\n            type=\"text\"\r\n            value={postcode}\r\n            onChange={(e) => setPostcode(e.target.value)}\r\n            placeholder=\"Enter your postcode\"\r\n            className=\"block font-extralight\"\r\n            style={{ fontSize: '16px' }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mx-2 mt-4\">\r\n          {/* Use text input for registration */}\r\n          <input\r\n            type=\"text\"\r\n            value={registration}\r\n            onChange={(e) => setRegistration(e.target.value)}\r\n            placeholder=\"Enter your registration\"\r\n            className=\"block font-extralight\"\r\n            style={{ fontSize: '16px' }}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className=\"text-white font-light rounded-full px-9 py-2 ml-5 mt-5\"\r\n          style={{ backgroundColor: '#112D4E', fontSize: '16px' }}\r\n          onClick={handleFindCentre}\r\n        >\r\n          Find your centre\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"mx-auto my-16 grid p-6 max-w-lg grid-cols-1 gap-6 sm:mt-20 lg:mx-auto lg:max-w-none lg:grid-cols-2 lg:gap-8 justify-center\" style={{ color: '#112D4E' }}>\r\n        {/* Canterbury Address */}\r\n        <div className=\"p-8 rounded-xl bg/5\" style={{ backgroundColor: '#DBE2EF' }}>\r\n          <h2 className=\"text-xl font-bold mb-2\">YOUR VEHICLE DETAILS </h2>\r\n          <p style={{ fontWeight: 'bold' }}>\r\n            Registration: {registration}\r\n          </p>\r\n          <p className=\"\" style={{ color: '#3F72AF' }}>\r\n            Make: {/* Add Make here */}\r\n          </p>\r\n          <p className=\"\" style={{ color: '#3F72AF' }}>\r\n            Model: {/* Add Model here */}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Selected Centre */}\r\n        <div className=\"p-6 rounded-xl bg/3 text-center\" style={{ backgroundColor: '#DBE2EF' }}>\r\n          <h2 className=\"text-xl font-bold mb-2\">YOUR SELECTED CENTRE</h2>\r\n          <p style={{ fontWeight: 'bold' }}>\r\n            <p></p>\r\n          </p>\r\n          {selectedCentre && (\r\n            <div>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.address}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.city}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.county}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.country}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.postcode}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.distance}\r\n              </p>\r\n              <p className=\"\" style={{ color: '#3F72AF' }}>\r\n                {selectedCentre.tel}\r\n              </p>\r\n            </div>\r\n          )}\r\n\r\n          <button className=\"text-white px-4 py-2 rounded mt-2\" style={{ backgroundColor: '#112D4E' }} onClick={() => setShowNearbyCentres(!showNearbyCentres)}>\r\n            {showNearbyCentres ? 'HIDE NEARBY CENTRES' : 'OTHER NEARBY CENTRES'}\r\n          </button>\r\n\r\n          {showNearbyCentres && (\r\n            <div>\r\n              {/* Render nearby centres here */}\r\n              {nearbyCentres.map((centre, index) => (\r\n                <div key={index}>\r\n                  {/* Display centre information */}\r\n                  {/* ... (similar to renderNearbyCentres function in your original code) */}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Use Link component to navigate to the service page */}\r\n          <button className=\"text-white px-4 py-2 rounded mt-2\" style={{ backgroundColor: '#112D4E', display: 'block', marginLeft: 'auto' }} onClick={handleConfirm}>\r\n            CONFIRM\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"],
  "mappings": "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",
  "names": []
}

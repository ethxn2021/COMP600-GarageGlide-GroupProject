{
  "version": 3,
  "sources": ["../../../app/routes/signup.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\nimport.meta.hot = __hmr__.createHotContext(\n//@ts-expect-error\n\"app\\\\routes\\\\signup.tsx\"\n);\nimport.meta.hot.lastModified = \"1706365588475.9304\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport emailjs from \"@emailjs/browser\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\nexport default function signup() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState(\"\");\r\n  const [telephone, settelephone] = useState(\"\");\r\n  const [telephoneError, settelephoneError] = useState(\"\");\r\n\r\n  const validatetelephone = (telephone: any) => {\r\n    if (telephone.length < 10) {\r\n      return \"Telephone must be more than 10 characters\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const validateConfirmPassword = (password: any, confirmPassword: any) => {\r\n    if (password !== confirmPassword) {\r\n      return \"Confirm password must match password\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  const validatePassword = (password: any) => {\r\n    if (password.length < 8) {\r\n      return \"Password must be more than 8 characters\";\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  interface FormStatus {\r\n    submitted: boolean;\r\n    error: string | null;\r\n  }\r\n\r\n  const [formStatus, setFormStatus] = useState<FormStatus>({\r\n    submitted: false,\r\n    error: null,\r\n  });\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  const sendEmail = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    const form = e.currentTarget;\r\n    const formData = new FormData(form);\r\n\r\n    try {\r\n      const response = await fetch('/db', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n        },\r\n        body: new URLSearchParams(formData as any).toString(),\r\n      });\r\n      const result = await emailjs.sendForm(\"service_1r5awa7\", \"template_ybutzfc\", form, \"ifIYm02lZT5rdQsmD\");\r\n      console.log(result);\r\n      // Clear the form\r\n      form.reset();\r\n      settelephone(\"\");\r\n      setPassword(\"\");\r\n      setConfirmPassword(\"\");\r\n      setFormStatus({\r\n        submitted: true,\r\n        error: null,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      setFormStatus({\r\n        submitted: false,\r\n        error: \"An error occurred. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\r\n        {/* Start of the main container */}\r\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          {/* Page Title */}\r\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight pt-10\" style={{ color: \"#112D4E\" }}>\r\n            Sign up for an account\r\n          </h2>\r\n        </div>\r\n        {/*Form*/}\r\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\r\n          <form className=\"space-y-6\" onSubmit={sendEmail} method=\"POST\">\r\n\r\n            {/* First Name Input */}\r\n            <div>\r\n              <label htmlFor=\"firstName\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                First Name\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                  style={{ fontSize: \"16px\", borderColor: \"#112D4E\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Last Name Input */}\r\n            <div>\r\n              <label htmlFor=\"lastName\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                Last Name\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  type=\"text\"\r\n                  required\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                  style={{ fontSize: \"16px\", borderColor: \"#112D4E\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Phone Number Input */}\r\n            <div>\r\n              <label htmlFor=\"telephone\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                Phone Number\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"telephone\"\r\n                  name=\"telephone\"\r\n                  type=\"text\"\r\n                  required\r\n                  value={telephone}\r\n                  onChange={(e) => settelephone(e.target.value)}\r\n                  onBlur={() => settelephoneError(validatetelephone(telephone))}\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                  style={{ fontSize: \"16px\", borderColor: \"#112D4E\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Email Input */}\r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                Email address\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  autoComplete=\"email\"\r\n                  required\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                  style={{ fontSize: \"16px\", borderColor: \"#112D4E\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Password Input */}\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                Password\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  onBlur={() => setPasswordError(validatePassword(password))}\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                />\r\n                {passwordError && <p className=\"text-red-500 text-sm mt-1\">{passwordError}</p>}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Confirm Password Input */}\r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium leading-6 text-gray-900\" style={{ fontSize: \"16px\", color: \"#112D4E\" }}>\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"mt-2\">\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  name=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                  onBlur={() => setConfirmPasswordError(validateConfirmPassword(password, confirmPassword))}\r\n                  className=\"block w-full border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset sm:text-sm sm:leading-6\"\r\n                />\r\n                 {confirmPasswordError && <p className=\"text-red-500 text-sm mt-1\">{confirmPasswordError}</p>}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Sign Up Button */}\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"flex w-full justify-center rounded-full px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n                style={{ backgroundColor: \"#112D4E\", fontSize: \"16px\" }}\r\n              >\r\n                Sign up\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <p className=\"mt-10 text-center text-sm text-gray-500\">\r\n            Already have an account? {/* Sign-In Link */}\r\n            <Link to=\"/login\" className=\"font-semibold leading-6\" style={{ color: \"#112D4E\" }}>\r\n              Sign In\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],
  "mappings": "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",
  "names": ["telephone", "password", "confirmPassword"]
}
